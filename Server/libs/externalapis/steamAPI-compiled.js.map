{"version":3,"sources":["steamAPI.js"],"names":[],"mappings":";;;;;;AAIA,IAAI,UAAU,QAAQ,SAAR,CAAV;AACJ,IAAI,SAAS,QAAQ,GAAR,CAAY,aAAZ;;AAEb,OAAO,OAAP,GACA;AACI,uBAAmB,2BAAS,WAAT,EAAsB,oBAAtB,EAA4C;;;AAG3D,YAAI,QAAS,yEACP,MADO,GACE,6BADF,GACkC,WADlC,GACgD,cADhD;;;AAH8C,eAO3D,CAAQ,GAAR,CAAY,KAAZ,EAAmB,UAAS,GAAT,EAAc,GAAd,EAAmB,IAAnB,EAAwB;AACvC,gBAAI,WAAW,KAAK,KAAL,CAAW,IAAX,CAAX,CADmC;AAEvC,gBAAI,OAAO,SAAS,QAAT;;;AAF4B,gBAKnC,QAAQ,KAAK,KAAL;;;AAL2B,gCAQvC,CAAqB,KAArB,EARuC;SAAxB,CAAnB,CAP2D;KAA5C;;AAmBnB,qBAAiB,yBAAS,WAAT,EAAsB,iBAAtB,EACjB;;AAEI,YAAI,QAAS,iEACT,MADS,GACA,MADA,GAET,WAFS,GAEK,WAFL,GAGT,sBAHS;;;AAFjB,eAQI,CAAQ,GAAR,CAAY,KAAZ,EAAmB,UAAS,GAAT,EAAc,GAAd,EAAmB,IAAnB,EACnB;AACI,gBAAI,WAAW,KAAK,KAAL,CAAW,IAAX,CAAX,CADR;AAEI,gBAAI,cAAc,SAAS,WAAT;;;AAFtB,gBAKQ,eAAe,YAAY,OAAZ,CALvB;;AAOI,oBAAQ,GAAR,CAAY,4BAA4B,KAAK,SAAL,CAAe,YAAf,CAA5B,CAAZ;;;;AAPJ,6BAWI,CAAkB,YAAlB,EAXJ;SADmB,CAAnB,CARJ;KADiB;AAwBjB,uBAAmB,2BAAS,gBAAT,EAA2B,oBAA3B,EACnB;;AAEI,YAAI,gBAAgB,EAAhB,CAFR;AAGI,aAAI,IAAI,IAAE,CAAF,EAAK,IAAI,iBAAiB,MAAjB,EAAyB,GAA1C,EACA;AACI,6BAAiB,iBAAiB,CAAjB,IAAsB,GAAtB,CADrB;SADA;AAIA,gBAAQ,GAAR,CAAY,oCAAoC,aAApC,CAAZ;;;AAPJ,YAUQ,QAAQ,uEACR,MADQ,GACC,MADD,GAER,YAFQ,GAEO,aAFP,CAVhB;;AAcI,gBAAQ,GAAR,CAAY,KAAZ,EAAmB,UAAS,GAAT,EAAc,GAAd,EAAmB,IAAnB,EACnB;AACI,gBAAI,WAAW,KAAK,KAAL,CAAW,IAAX,CAAX,CADR;AAEI,oBAAQ,GAAR,CAAY,yBAAyB,KAAK,SAAL,CAAe,QAAf,CAAzB,CAAZ,CAFJ;AAGI,iCAAqB,SAAS,QAAT,CAArB,CAHJ;SADmB,CAAnB,CAdJ;KADmB;CA7CvB","file":"steamAPI-compiled.js","sourcesContent":["/**\n * Created by Joey on 3/23/16.\n */\n//require('dotenv').config();\nvar request = require('request');\nvar apiKey = process.env.STEAM_API_KEY;\n\nmodule.exports =\n{\n    getUserOwnedGames: function(userSteamId, handleOwnedGamesData) {\n\n        //Build steam API Query\n        var query =  \"http://api.steampowered.com/IPlayerService/GetOwnedGames/v0001/?key=\"\n            + apikey + \"&include_appinfo=1&steamid=\" + userSteamId + \"&format=json\";\n\n        //Make our request\n        request.get(query, function(err, res, body){\n            var jsonData = JSON.parse(body);\n            var resp = jsonData.response;\n\n            //Get the games data\n            var games = resp.games;\n\n            //callback\n            handleOwnedGamesData(games);\n        });\n    },\n    //TODO: We can get steam friends tracked games (Future facebook etc too)!\n    getSteamFriends: function(userSteamId, handleFriendsData)\n    {\n        //Build query\n        var query =  \"http://api.steampowered.com/ISteamUser/GetFriendList/v0001/?\" +\n            \"key=\" + apiKey +\n            \"&steamid=\" + userSteamId +\n            \"&relationship=friend\";\n\n        //Make request\n        request.get(query, function(err, res, body)\n        {\n            var jsonData = JSON.parse(body);\n            var friendsList = jsonData.friendslist;\n\n            //Get the Friends data\n            var friendsArray = friendsList.friends;\n\n            console.log('GetFriendList Request: ' + JSON.stringify(friendsArray));\n\n            //Contains \"steamid\", \"relationship\" (ie. 'friend'), and \"friend_since\"\n            //for each friend\n            handleFriendsData(friendsArray);\n        });\n    },\n    getSteamUsersInfo: function(userSteamIdArray, handleFriendUserInfo)\n    {\n        //Build comma delimited list\n        var queryidstring = \"\";\n        for(var i=0; i < userSteamIdArray.length; i++)\n        {\n            queryidstring += userSteamIdArray[i] + \",\";\n        }\n        console.log(\"Getting user info using query: \" + queryidstring);\n\n        //Build query\n        var query = \" http://api.steampowered.com/ISteamUser/GetPlayerSummaries/v0002/?\" +\n            \"key=\" + apiKey +\n            \"&steamids=\" + queryidstring;\n\n        request.get(query, function(err, res, body)\n        {\n            var jsonData = JSON.parse(body);\n            console.log(\"Got all users data: \" + JSON.stringify(jsonData));\n            handleFriendUserInfo(jsonData.response);\n        });\n    }\n};\n"]}
{"version":3,"sources":["usertrackedgamescontroller.js"],"names":[],"mappings":"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","file":"usertrackedgamescontroller-compiled.js","sourcesContent":["/**\n * Created by Joey on 4/4/16.\n */\nvar app = angular.module('upcomingGames');\nvar removeMode = false;\n\napp.controller('usertrackedgames', function($scope, $interval, dataService, httpReqService)\n{\n    $scope.trackedGames = [];\n    //We are not in remove mode at start, set to remove games text\n    $scope.remToggle = removeMode;\n    $scope.remStyle = \"display: none\";\n\n    //When user first enters site get their tracked games\n    getTrackedGames($scope, httpReqService);\n\n    //Used for form submission, if user doesn't use button\n    $scope.toggleRes = function(){\n        ddToggle();\n    };\n\n    //When user uses search box\n    $scope.searchGames = function() {\n        //Toggle our no results text if it's displaying\n        var noResText = document.getElementById('noResultsIndicator');\n        noResText.style.display = 'none';\n\n        var searchInValue =  document.getElementById('searchGamesIn').value.trim();\n        var searchingText = document.getElementById('searchingIndicator');\n        searchingText.style.display = 'inline-block';\n\n        httpReqService.searchForGames(searchInValue, function(foundGames){\n            searchingText.style.display = 'none';\n\n            if(foundGames.length <= 0) {\n                var noResText = document.getElementById('noResultsIndicator');\n                noResText.style.display = 'inline-block';\n            }\n            else\n            {\n                $scope.searchResults = foundGames;\n            }\n        });\n\n    };\n\n    $scope.removeTrackedGame = function(game){\n        $scope.trackedGames = _.without($scope.trackedGames, game).sort(function(a,b)\n        {\n            return compareStrings(a.name, b.name);\n        });\n        httpReqService.removeTrackedGamePost(game.gbGameId, function(){\n            getTrackedGames($scope, httpReqService);\n        });\n    };\n\n    $scope.toggleRemGames = function(){\n        removeGamesToggle($scope);\n    };\n\n    $scope.getTTR = function (relMon, relDay, relYear) {\n        return getTTR(relMon, relDay, relYear);\n\n    };\n\n    //Repeatedly update the countdown to how long is left until game release\n    $interval(function(){\n        for(var i=0; i <$scope.trackedGames.length; i++)\n        {\n            var trackedGame = $scope.trackedGames[i];\n            $scope.trackedGames[i].ttr =\n                dataService.getTimeToRelease(trackedGame.releaseMonth, trackedGame.releaseDay, trackedGame.releaseYear);\n        }\n    }, 1000);\n\n});\n\nfunction getTrackedGames($scope, httpReqService)\n{\n    setRemoveView($scope, removeMode);\n    httpReqService.getTrackedGames(function(data){\n        $scope.trackedGames = data.sort(function(a,b)\n        {\n            return compareStrings(a.name, b.name);\n        });\n\n        //Remove our loading indicator\n        angular.element(\"#loadingListIcon\").remove();\n        //Make sure view still reflects mode\n        setRemoveView($scope, removeMode);\n\n    });\n}\n\nfunction removeGamesToggle($scope){\n    if(!removeMode) {\n        removeMode = true;\n        $scope.remToggle = removeMode;\n    }\n    else\n    {\n        removeMode = false;\n        $scope.remToggle = removeMode;\n    }\n    $scope.remStyle = removeMode ? \"display: inline-block\" : \"display: none\"\n}\n\nfunction ddToggle(){\n    //Toggle results dropdown window\n    angular.element('#searchGamesButton').dropdown('toggle');\n}\n\nfunction compareStrings(a, b) {\n    a = a.toLowerCase();\n    b = b.toLowerCase();\n\n    return (a < b) ? -1 : (a > b) ? 1 : 0;\n}\n\nfunction setRemoveView($scope, isRemove)\n{\n    var removeButtons = document.getElementsByName('removeGameButton');\n    if(isRemove) {\n        //Make each remove button visible\n        for (var i = 0; i < removeButtons.length; i++) {\n            removeButtons[i].style.display = \"inline-block\";\n        }\n        //Let user click done when they are done\n        $scope.remToggleText = \"Done\";\n    }\n    else\n    {\n        //Make each remove button in-visible\n        for (var j = 0; j < removeButtons.length; j++) {\n            removeButtons[j].style.display = \"none\";\n        }\n        //Set the button text\n        $scope.remToggleText = \"Remove Games\"\n    }\n}"]}
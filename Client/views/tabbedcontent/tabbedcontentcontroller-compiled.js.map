{"version":3,"sources":["tabbedcontentcontroller.js"],"names":[],"mappings":";;;;;AAGA,IAAI,MAAM,QAAQ,MAAR,CAAe,eAAf,CAAN;;AAEJ,IAAI,UAAJ,CAAe,SAAf,EAA0B,UAAS,MAAT,EAAiB,cAAjB,EAC1B;;AAEI,YAAQ,OAAR,CAAgB,QAAhB,EAA0B,KAA1B,CAAgC,YAAY;AACxC,UAAE,0BAAF,EAA8B,GAA9B,CAAkC,MAAlC,EADwC;KAAZ,CAAhC;;;AAFJ,UAQI,CAAO,WAAP,GAAqB,KAArB,CARJ;AASI,WAAO,YAAP,GAAsB,EAAtB;;;AATJ,UAYI,CAAO,GAAP,CAAW,cAAX,EAA2B,UAAS,KAAT,EAAgB,IAAhB,EAAqB;;;AAG5C,eAAO,YAAP,GAAsB,EAAtB,CAH4C;AAI5C,eAAO,WAAP,GAAqB,IAArB;;;AAJ4C,sBAO5C,CAAe,iBAAf,CAAiC,KAAK,GAAL,CAAS,IAAT,EAAe,UAAS,QAAT,EAAkB;AAC9D,mBAAO,WAAP,GAAqB,KAArB,CAD8D;AAE9D,mBAAO,YAAP,GAAsB,QAAtB,CAF8D;SAAlB,CAAhD,CAP4C;KAArB,CAA3B,CAZJ;CAD0B,CAA1B;;AA4BA,IAAI,UAAJ,CAAe,UAAf,EAA0B,UAAU,MAAV,EAAkB,cAAlB,EAAiC;;AAEvD,WAAO,YAAP,GAAsB,KAAtB;;;AAFuD,UAKvD,CAAO,GAAP,CAAW,cAAX,EAA2B,UAAS,KAAT,EAAgB,IAAhB,EAC3B;AACI,eAAO,UAAP,GAAoB,EAApB,CADJ;AAEI,eAAO,YAAP,GAAsB,IAAtB;;;AAFJ,sBAKI,CAAe,cAAf,CAA8B,KAAK,GAAL,CAAS,IAAT,EAAe,UAAS,SAAT,EAAmB;AAC5D,mBAAO,YAAP,GAAsB,KAAtB,CAD4D;AAE5D,mBAAO,UAAP,GAAoB,SAApB,CAF4D;SAAnB,CAA7C,CALJ;KAD2B,CAA3B,CALuD;CAAjC,CAA1B;;AAmBA,IAAI,UAAJ,CAAe,qBAAf,EAAsC,UAAS,MAAT,EAAiB,cAAjB,EACtC;;AAEI,WAAO,UAAP,GAAoB,KAApB,CAFJ;AAGI,WAAO,OAAP,GAAiB,EAAjB;;;AAHJ,kBAMI,CAAe,sBAAf,CAAsC,UAAS,WAAT,EACtC;AACI,YAAI,qBAAqB,WAArB;;;AADR,aAIQ,IAAI,IAAE,CAAF,EAAK,IAAE,mBAAmB,MAAnB,EAA0B,GAAzC,EACA;AACI,gBAAG,mBAAmB,CAAnB,EAAsB,QAAtB,EAAgC;AAC/B,mCAAmB,CAAnB,EAAsB,QAAtB,GAAiC,mBAAmB,CAAnB,EAAsB,QAAtB,CAA+B,IAA/B,CAAoC,UAAU,CAAV,EAAa,CAAb,EAAgB;AACjF,2BAAO,eAAe,EAAE,IAAF,EAAQ,EAAE,IAAF,CAA9B,CADiF;iBAAhB,CAArE,CAD+B;aAAnC;SAFJ;;;AAJJ,cAcI,CAAO,OAAP,GAAiB,mBAAmB,IAAnB,CAAwB,UAAS,CAAT,EAAW,CAAX,EACzC;AACI,mBAAO,eAAe,EAAE,MAAF,EAAU,EAAE,MAAF,CAAhC,CADJ;SADyC,CAAzC,CAdJ;KADsC,CAAtC,CANJ;CADsC,CAAtC;;AA6BA,SAAS,cAAT,CAAwB,CAAxB,EAA2B,CAA3B,EAA8B;AAC1B,QAAI,EAAE,WAAF,EAAJ,CAD0B;AAE1B,QAAI,EAAE,WAAF,EAAJ,CAF0B;;AAI1B,WAAO,CAAC,GAAI,CAAJ,GAAS,CAAC,CAAD,GAAK,CAAC,GAAI,CAAJ,GAAS,CAAV,GAAc,CAAd,CAJI;CAA9B","file":"tabbedcontentcontroller-compiled.js","sourcesContent":["/**\n * Created by Joey on 4/4/16.\n */\nvar app = angular.module('upcomingGames');\n\napp.controller('newstab', function($scope, httpReqService)\n{\n    //Set active inital tab\n    angular.element(document).ready(function () {\n        $('#news-table a[href=\"#1\"]').tab('show');\n\n    });\n\n    //Set that we are not loading news, as no games selected initially\n    $scope.loadingNews = false;\n    $scope.newsArticles = [];\n\n    //When a tracked game is selected\n    $scope.$on('selectedGame', function(event, args){\n\n        //We are loading news and clear the list while we load\n        $scope.newsArticles = [];\n        $scope.loadingNews = true;\n\n        //Gett the news Article data from our http service for the item\n        httpReqService.searchForArticles(args.res.name, function(newsData){\n            $scope.loadingNews = false;\n            $scope.newsArticles = newsData;\n        });\n    });\n\n});\n\napp.controller('mediatab',function ($scope, httpReqService){\n\n    $scope.loadingMedia = false;\n\n    //When user selects a tracked game\n    $scope.$on('selectedGame', function(event, args)\n    {\n        $scope.mediaItems = [];\n        $scope.loadingMedia = true;\n\n        //Now get media Data for the item\n        httpReqService.searchForMedia(args.res.name, function(mediaData){\n            $scope.loadingMedia = false;\n            $scope.mediaItems = mediaData;\n        });\n    });\n\n});\n\napp.controller('friendstrackedgames', function($scope, httpReqService)\n{\n    //Initially don't show all friends (only ones with >0 tracked games)\n    $scope.allFriends = false;\n    $scope.friends = [];\n\n    //Request tracked games from server API\n    httpReqService.getFriendsTrackedGames(function(friendsData)\n    {\n        var sortedFriendsGames = friendsData;\n\n        //Sort each of their games\n        for(var i=0; i<sortedFriendsGames.length;i++)\n        {\n            if(sortedFriendsGames[i].gameData) {\n                sortedFriendsGames[i].gameData = sortedFriendsGames[i].gameData.sort(function (a, b) {\n                    return compareStrings(a.name, b.name);\n                });\n            }\n        }\n\n        //Sort the friends themselves\n        $scope.friends = sortedFriendsGames.sort(function(a,b)\n        {\n            return compareStrings(a.userid, b.userid);\n        });\n    });\n});\n\nfunction compareStrings(a, b) {\n    a = a.toLowerCase();\n    b = b.toLowerCase();\n\n    return (a < b) ? -1 : (a > b) ? 1 : 0;\n}"]}
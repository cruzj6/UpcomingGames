{"version":3,"sources":["userdatamodel.js"],"names":[],"mappings":";;;;;QAOgB;QAgCA;QAcA;;;;AAlDhB,IAAI,KAAK,QAAQ,IAAR,CAAL;AACJ,IAAI,IAAE,QAAQ,iBAAR,CAAF;;;AAGG,SAAS,eAAT,CAAyB,MAAzB,EAAiC,MAAjC,EAAyC,YAAzC,EACP;AACI,OAAG,QAAH,CAAY,GAAZ,GAAkB,IAAlB,CADJ;;AAGI,OAAG,OAAH,CAAW,QAAQ,GAAR,CAAY,YAAZ,EAA0B,UAAS,GAAT,EAAc,MAAd,EAAsB,IAAtB,EAA4B;AAC7D,YAAI,GAAJ,EAAS,MAAM,GAAN,CAAT;AACA,gBAAQ,GAAR,CAAY,2CAAZ,EAF6D;;AAI7D,eAAO,KAAP,CAAa,sEAAb,EAJ6D;AAK7D,eAL6D;KAA5B,CAArC;;;AAHJ,0BAYI,CAAuB,MAAvB,EAA+B,UAAS,GAAT,EAC/B;AACI,gBAAQ,GAAR,CAAY,eAAZ;;AADJ,YAGO,CAAC,EAAE,QAAF,CAAW,GAAX,EAAgB,MAAhB,CAAD,EACH;AACI,eAAG,OAAH,CAAW,QAAQ,GAAR,CAAY,YAAZ,EAA0B,UAAS,GAAT,EAAc,MAAd,EAAsB,IAAtB,EAA4B;AAC7D,wBAAQ,GAAR,CAAY,kBAAZ;;AAD6D,sBAG7D,CAAO,KAAP,CAAa,4CAAb,EAA2D,CAAC,MAAD,EAAS,MAAT,CAA3D,EAA6E,UAAU,GAAV,EAAe,GAAf,EAAoB;AAC7F,mCAD6F;AAE7F,2BAF6F;iBAApB,CAA7E,CAH6D;aAA5B,CAArC,CADJ;SADA;KAJ2B,CAA/B,CAZJ;CADO;;;AAgCA,SAAS,oBAAT,CAA8B,MAA9B,EAAsC,MAAtC,EAA8C,YAA9C,EACP;AACI,OAAG,OAAH,CAAW,QAAQ,GAAR,CAAY,YAAZ,EAA0B,UAAS,GAAT,EAAc,MAAd,EAAsB,IAAtB,EAA4B;;AAE7D,eAAO,KAAP,CAAa,sEAAb,EAF6D;;AAI7D,eAAO,KAAP,CAAa,8DAAb,EAA6E,CAAC,MAAD,EAAS,MAAT,CAA7E,EAA+F,YAAU;AACrG,2BADqG;AAErG,mBAFqG;SAAV,CAA/F,CAJ6D;KAA5B,CAArC,CADJ;CADO;;AAcA,SAAS,sBAAT,CAAgC,MAAhC,EAAwC,aAAxC,EACP;AACI,YAAQ,GAAR,CAAY,QAAQ,GAAR,CAAY,YAAZ,CAAZ,CADJ;AAEI,YAAQ,GAAR,CAAY,gCAAZ,EAFJ;AAGI,OAAG,OAAH,CAAW,QAAQ,GAAR,CAAY,YAAZ,EAA0B,UAAS,GAAT,EAAc,MAAd,EAAsB,IAAtB,EAA4B;AAC7D,eAAO,KAAP,CAAa,sEAAb,EAD6D;;AAG7D,gBAAQ,GAAR,CAAY,4BAAZ;;AAH6D,cAK7D,CAAO,KAAP,CAAa,qDAAb,EAAoE,CAAC,MAAD,CAApE,EAA8E,UAAS,GAAT,EAAc,GAAd,EAC9E;AACI,oBAAQ,GAAR,CAAY,wBAAwB,KAAK,SAAL,CAAe,IAAI,IAAJ,CAAvC,CAAZ;;AADJ,gBAGI,GAHJ;AAII,0BAAc,IAAI,IAAJ,CAAd,CAJJ;SAD8E,CAA9E,CAL6D;KAA5B,CAArC,CAHJ;CADO","file":"userdatamodel-compiled.js","sourcesContent":["/**\n * Created by Joey on 4/4/16.\n */\nvar pg = require('pg');\nvar _=require('underscore-node');\n\n//Add a gameId to the database for a user that they wish to track\nexport function addGameIDToUser(gameId, userId, doneCallback)\n{\n    pg.defaults.ssl = true;\n\n    pg.connect(process.env.DATABASE_URL, function(err, client, done) {\n        if (err) throw err;\n        console.log('Connected to postgres! Getting schemas...');\n\n        client.query(\"CREATE TABLE if not exists tracked_games (userid TEXT, gameId TEXT);\");\n        done();\n    });\n\n    //Make self call to get the tracked games for the user\n    getUsersTrackedGameIds(userId, function(ids)\n    {\n        console.log('INTO CALLBACK');\n        //If the game isn't already tracked by the user, add its\n        if(!_.contains(ids, gameId))\n        {\n            pg.connect(process.env.DATABASE_URL, function(err, client, done) {\n                console.log('inserting data!!');\n                //Prep our query\n                client.query(\"INSERT INTO tracked_games VALUES ($1, $2);\", [userId, gameId], function (err, res) {\n                    doneCallback();\n                    done();\n                });\n            });\n        }\n    });\n}\n\n//Remove a game from the database for a userId\nexport function removeGameIDFromUser(gameId, userId, doneCallback)\n{\n    pg.connect(process.env.DATABASE_URL, function(err, client, done) {\n\n        client.query(\"CREATE TABLE if not exists tracked_games (userid TEXT, gameId TEXT);\");\n\n        client.query(\"DELETE FROM tracked_games WHERE userid=($1) AND gameId=($2);\", [userId, gameId], function(){\n            doneCallback();\n            done();\n        });\n    });\n\n}\n\nexport function getUsersTrackedGameIds(userid, handleUserIds)\n{\n    console.log(process.env.DATABASE_URL);\n    console.log(\"Entered get user tracked games\");\n    pg.connect(process.env.DATABASE_URL, function(err, client, done) {\n        client.query(\"CREATE TABLE if not exists tracked_games (userid TEXT, gameId TEXT);\");\n\n        console.log('GETTING USER TRACKED GAMES');\n        //Select all tracked gameId's for that userId\n        client.query(\"SELECT gameId FROM tracked_games WHERE userid=($1);\", [userid], function(err, res)\n        {\n            console.log(\"got FROM DATABASE: \" + JSON.stringify(res.rows));\n            //Send back the rows\n            done();\n            handleUserIds(res.rows);\n        });\n    });\n}"]}